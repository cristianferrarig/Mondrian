// Base positions
%flex-view {
  @extend %stretch;
  @include display(flex);
  @include align-items(stretch);
  @include justify-content(flex-start);
}
%flex-vertical {
  @extend %flex-view;
  @include flex-direction(column);
}
%flex-horizontal {
  @extend %flex-view;
  @include flex-direction(row);
}
%flex-content {
  @include flex(1);
}


// Layout Structure
@mixin flex-layout($definition) {

  @include debug($definition, "Map");

  // Temporal variables
  $module-name: map-get($definition, name);
  $layout:      map-get($definition, layout);
  $orientation: map-get($definition, orientation);
  $regions:     map-get($definition, regions);

  // Module definition
  .#{$module-name} {

    & { @extend %flex-#{$orientation}; }

    @each $region in $regions {
      //$region:         nth($region, 2);
      $is_flexible:    map-get($region, flexible);
      $submodule-name: map-get($region, name);
      $size-value:     map-get($region, size);
      $size-prop:      if($orientation == vertical, height, width);

      &-#{$submodule-name} {
        position: relative;
        @if ($is_flexible) {
          @extend %flex-content;
        }
        @else {
          #{$size-prop}: $size-value;
        }
      }
    }

    @if $debugger {
      /* INI: DEBUGGER */
      @if ($orientation == horizontal) {
        > div {
          margin: $debugger-spacing;
          margin-top: $debugger-label;
        }
        > div + div {
          margin-left: 0;
        }
      }
      @else if ($orientation == vertical) {
        > div {
          margin: $debugger-spacing;
        }
        > div:first-of-type {
          margin-top: $debugger-label;
        }
        > div + div {
          margin-top: 0;
        }
      }
    }

  }
}
