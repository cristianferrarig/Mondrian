// Base positions
%fixed-view   { @extend %stretch; }
%fixed-top    { @extend %stretch; bottom: auto; }
%fixed-left   { @extend %stretch; right:  auto; }
%fixed-bottom { @extend %stretch; top:    auto; }
%fixed-right  { @extend %stretch; left:   auto; }


// TEMPORAL
@mixin fixed-combinations-layout($definition) {
  $orientation:   map-get($definition, orientation);
  $regions:       map-get($definition, regions);

  $header-size:   "";
  $nav-size:      "";
  $footer-size:   "";
  $menu-size:     "";
  $aside-size:    "";

  @if ($orientation == horizontal) {
    $menu-size:    map-get( nth($regions,1), size );
    $nav-size:     map-get( nth($regions,2), size );
    $aside-size:   map-get( nth($regions,4), size );

    @if $debugger {
      /* INI: DEBUGGER */
      &-menu         ~ &-nav  { left:  $menu-size  + ($debugger-spacing * 2); }
      &-menu         ~ &-body { left:  $menu-size  + ($debugger-spacing * 2); }
      &-nav          ~ &-body { left:  $nav-size   + ($debugger-spacing * 2); }
      &-aside        ~ &-body { right: $aside-size + ($debugger-spacing * 2); }
      &-menu + &-nav ~ &-body { left:  $menu-size  + $nav-size + ($debugger-spacing * 3); }
    }
    @else {
      &-menu         ~ &-nav  { left:  $menu-size; }
      &-menu         ~ &-body { left:  $menu-size; }
      &-nav          ~ &-body { left:  $nav-size; }
      &-aside        ~ &-body { right: $aside-size; }
      &-menu + &-nav ~ &-body { left:  $menu-size + $nav-size; }
    }
  }

  @else if ($orientation == vertical) {
    $header-size: map-get( nth($regions,1), size );
    $nav-size:    map-get( nth($regions,2), size );
    $footer-size: map-get( nth($regions,4), size );

    @if $debugger {
      /* INI: DEBUGGER */
      &-header         ~ &-nav  { top:    $header-size + $debugger-label + $debugger-spacing; }
      &-header         ~ &-body { top:    $header-size + $debugger-label + $debugger-spacing; }
      &-nav            ~ &-body { top:    $nav-size    + $debugger-label + $debugger-spacing; }
      &-footer         ~ &-body { bottom: $footer-size + ($debugger-spacing * 2); }
      &-header + &-nav ~ &-body { top:    $header-size + $nav-size + $debugger-label + ($debugger-spacing * 2); }
    }
    @else {
      &-header         ~ &-nav  { top:    $header-size; }
      &-header         ~ &-body { top:    $header-size; }
      &-nav            ~ &-body { top:    $nav-size; }
      &-footer         ~ &-body { bottom: $footer-size; }
      &-header + &-nav ~ &-body { top:    $header-size + $nav-size; }
    }
  }
  @else {
    @warn "Error";
  }

}


@mixin fixed-layout($definition) {
  $name:          map-get($definition, name);
  $orientation:   map-get($definition, orientation);
  $regions:       map-get($definition, regions);

  $content-index: length($regions);
  $content-pre:   ();
  $content-post:  ();

  // @include debug($definition,definition);
  // @include debug($regions,regions);

  .#{$name} {

    & { @extend %fixed-view; }

    @each $region in $regions {

      $index:       index($regions,$region);
      $region-name: map-get($region,name);
      $is_flexible: map-get($region,flexible);

      @include debug($region,"region #{$index}: #{$region-name}");

      $size-value:  map-get($region,size);
      $size-prop:   "";
      $position:    "";

      @if ($is_flexible) {
        $content-index: $index;
        $position: view;
      }
      @else {
        @if ($index < $content-index ) {
          $position: start;
          $content-pre: join($content-pre, $index, comma);
        }
        @else if ($index > $content-index) {
          $position: end;
          $content-post: join($content-post, $index, comma);
        }
        @if ($orientation == horizontal) {
          $position: if($position == start, left, right);
          $size-prop: width;
        }
        @else if ($orientation == vertical) {
          $position: if($position == start, top, bottom);
          $size-prop: height;
        }
      }

      &-#{$region-name} {
        @extend %fixed-#{$position};
        #{$size-prop}: $size-value;
      }

      @include fixed-combinations-layout($definition);

    }

  }

  @include debug($content-index, "Content index");
  @include debug($content-pre,   "Pre content");
  @include debug($content-post,  "Post content");

}
